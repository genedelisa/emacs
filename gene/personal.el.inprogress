;; -*- coding: latin-1; mode: Emacs-Lisp; mode: auto-fill; -*-
;;
;; Time-stamp: "Last Modified 2012-05-06 09:59:45 by Gene De Lisa, gene"
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Gene's personal stuff
;; gene@rockhoppertech.com
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq calendar-latitude 40)
(setq calendar-longitude -75)
(setq calendar-location-name "Haddonfield, NJ")

;; these two are used in jde javadoc templates
;(setq user-mail-address "gene@rockhoppertech.com")
;(setq user-full-name "Gene De Lisa")
;; I changed it to use this;
(setq jde-user-mail-address "gene@rockhoppertech.com")
(setq jde-user-full-name "Gene De Lisa")

;(setq user-mail-address "nospam@nospam.com")
;(setq user-full-name "No one")

(setq user-mail-address "gene@rockhoppertech.com")
(setq user-full-name "Gene De Lisa")

;;;
;;(setq gnus-select-method '(nntp "news.bellatlantic.net"))
;;(setq gnus-startup-file "c:/.newsrc")
(setq gnus-secondary-select-methods
      '((nnml "private")
        (nnimap "rockhopper"
                (nnimap-address "rockhoppertech.com")
                (nnimap-authenticator login))))


(setq mail-sources
      '((file)
        (pop :server "rockhoppertech.com"
             :user "rockhopp"
             )
        )
      )

;; from the ntemacs faq
(setq smtpmail-default-smtp-server "rockhoppertech.com")
(setq smtpmail-local-domain nil)
(setq send-mail-function 'smtpmail-send-it)
(load-library "smtpmail")
(load-library "message")
(setq message-send-mail-function 'smtpmail-send-it)

(setq nnmail-spool-file "po:rockhopp")
(setq nnmail-pop-password-required t)

;; (setq mail-sources
;;       '((file)
;;         (pop :server "rockhoppertech.com"
;;              :user "rockh73"
;;              )
;;         (webmail :subtype 'hotmail
;;                  :user "therockhopper"
;;                  )
;;         )
;;       )


(setq gnus-show-threads nil) ;; Turn off threading
;(gnus-group-list-all-groups) ;; Show all the groups, even empty ones
;;===============================================================
;;                   Setup the BBDB stuff.
;;===============================================================

;; (autoload 'bbdb         "bbdb-com" "Insidious Big Brother Database" t)
;; (autoload 'bbdb-name    "bbdb-com" "Insidious Big Brother Database" t)
;; (autoload 'bbdb-net     "bbdb-com" "Insidious Big Brother Database" t)
;; (autoload 'bbdb-company "bbdb-com" "Insidious Big Brother Database" t)
;; (autoload 'bbdb-notes   "bbdb-com" "Insidious Big Brother Database" t)
;; (autoload 'bbdb-insinuate-gnus     "bbdb-gnus"  "Hook BBDB into GNUS")
;; (setq gnus-startup-hook 'bbdb-insinuate-gnus)
;; (setq mail-setup-hook 'bbdb-insinuate-sendmail)
;; (add-hook 'message-setup-hook 'bbdb-insinuate-message)
;; (defun bbdb-insinuate-message ()
;;   "Call this function to hook BBDB into the message package."
;;   (define-key message-mode-map "\M-\t" 'bbdb-complete-name))
;; (setq bbdb-always-add-addresses t)
;; (setq bbdb-new-nets-always-primary 'never)
;; (setq bbdb-default-area-code 856)
;; (setq bbdb-use-pop-up t)
;;  ;; Prevent annoying popup on completion
;; (setq bbdb-completion-display-record nil)
;; (setq bbdb-pop-up-target-lines 4)


;(setq nnmail-movemail-program 'nnmail-pop3-movemail)

;; mail folders
;; (setq nnml-directory "GNUSmail/")
;; (setq nnmail-crash-box "gnus-crash-box")
;; (setq nnml-newsgroups-file
;;   (concat (file-name-as-directory nnml-directory) "newsgroups"))

;; (setq gnus-message-archive-method
;;       '(nnfolder "archive"
;; 		 (nnfolder-directory "c:/GNUSmail/archive/")
;; 		 (nnfolder-active-file "c:/GNUSmail/archive/active")
;; 		 (nnfolder-get-new-mail nil)
;; 		 (nnfolder-inhibit-expiry t)))

;;;

(setq gnus-subscribe-newsgroup-method 'gnus-subscribe-interactively)
;(setq gnus-organization-file (expand-file-name "~/organization"))



;;; SuperCite setup

(add-hook 'mail-citation-hook 'sc-cite-original)
(autoload 'sc-cite-original "supercite" "supercite")

(setq sc-reference-tag-string "")
(setq sc-preferred-header-style 0)
(setq sc-rewrite-header-list
      '((sc-header-attributed-random-verb)))

(defvar sc-verbs '("writes" "inscribes" "jots" "scrawls" "scribbles"
                   "states" "declares" "proclaims" "comments" "remarks"
                   "affirms"
                   "asserts" "says" "murmurs" "whispers" "shouts" "opines"
                   "ruminates"
                   "reflects" "muses" "mentions"))

(defun sc-random-verb ()
     (let* ((len (length sc-verbs))
            (num (random len)))
       (nth num sc-verbs)))

(defun sc-header-attributed-random-verb ()
     (let ((sc-mumble "")
           (whofrom (sc-whofrom)))
       (if whofrom
           (insert sc-reference-tag-string
                   (sc-hdr "\"" (sc-mail-field "sc-attribution") "\" == ")
                   (sc-hdr ""   (sc-mail-field "sc-author") " ")
                   (or (sc-hdr "<" (sc-mail-field "sc-from-address") ">" t)
                       (sc-hdr "<" (sc-mail-field "sc-reply-address") ">"  t)
                       "")
                   " "
                   (sc-random-verb)
   ;               ":\n"))))
                   ":"))))




;; rmail setup
;;(setenv "MAILHOST" "rockhoppertech.com")
;(setq rmail-default-file "c:/rmail")
;(setq rmail-default-rmail-file "c:/rmail")
;; (setq rmail-primary-inbox-list
;;     '("po:rockhopp") rmail-pop-password-required t)
